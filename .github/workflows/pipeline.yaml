#------------------------------------------------------------------------------
name: Pipeline
#------------------------------------------------------------------------------
# Workflow conditions
on:
  push:
    branches:
      - '*'
    paths-ignore:
      - 'autologs/**'
      - 'docs/**'
      - 'images/**'
      - 'ncov/**'
      - 'sc2rf/**'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
#------------------------------------------------------------------------------
jobs:
  #----------------------------------------------------------------------------
  tutorial:
    name: Tutorial
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #------------------------------------------------------------------------
      # BEGIN: COPIED FROM install.yaml

      # env variables setup (Edit CI_PROFILE)
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
          echo "CONDA_ENV_FILE=workflow/envs/environment.yaml" >> $GITHUB_ENV
          echo "CONDA_ENV_NAME=ncov-recombinant" >> $GITHUB_ENV
          echo "CI_PROFILE=profiles/tutorial" >> $GITHUB_ENV

      # checkout repository
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # setup conda with mamba
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge

      # install conda environment
      - name: create conda env
        run: mamba env create -f $CONDA_ENV_FILE

      # run help
      - name: run help
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE help;


      # END: COPIED FROM install.yaml
      #------------------------------------------------------------------------

      # run all
      - name: run all
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE all;

      # Create an artifact of the powerpoint slides
      - name: upload report
        uses: actions/upload-artifact@v3
        with:
          name: report-tutorial
          path: results/tutorial/report/report.pptx

  #----------------------------------------------------------------------------
  controls-positive:
    name: Controls (Positive)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #------------------------------------------------------------------------
      # BEGIN: COPIED FROM install.yaml

      # env variables setup (Edit CI_PROFILE)
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
          echo "CONDA_ENV_FILE=workflow/envs/environment.yaml" >> $GITHUB_ENV
          echo "CONDA_ENV_NAME=ncov-recombinant" >> $GITHUB_ENV
          echo "CI_PROFILE=profiles/controls-positive" >> $GITHUB_ENV

      # checkout repository
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # setup conda with mamba
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge

      # install conda environment
      - name: create conda env
        run: mamba env create -f $CONDA_ENV_FILE

      # run help
      - name: run help
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE help;


      # END: COPIED FROM install.yaml
      #----------------------------------------------------------------------------#

      # run all
      - name: run all
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE;

      # Create an artifact of the powerpoint slides
      - name: upload report
        uses: actions/upload-artifact@v3
        with:
          name: report-controls-positive
          path: results/controls-positive/report/report.pptx

  #----------------------------------------------------------------------------
  controls-negative:
    name: Controls (Negative)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #----------------------------------------------------------------------------#
      # BEGIN: COPIED FROM install.yaml

      # env variables setup (Edit CI_PROFILE)
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
          echo "CONDA_ENV_FILE=workflow/envs/environment.yaml" >> $GITHUB_ENV
          echo "CONDA_ENV_NAME=ncov-recombinant" >> $GITHUB_ENV
          echo "CI_PROFILE=profiles/controls-negative" >> $GITHUB_ENV

      # checkout repository
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # setup conda with mamba
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge

      # install conda environment
      - name: create conda env
        run: mamba env create -f $CONDA_ENV_FILE

      # run help
      - name: run help
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE help;


      # END: COPIED FROM install.yaml
      #----------------------------------------------------------------------------#

      # run all
      - name: run all
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE;

      # Create an artifact of the powerpoint slides
      - name: upload report
        uses: actions/upload-artifact@v3
        with:
          name: report-controls-negative
          path: results/controls-negative/report/report.pptx

  #----------------------------------------------------------------------------
  controls-all:
    name: Controls (All)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #----------------------------------------------------------------------------#
      # BEGIN: COPIED FROM install.yaml

      # env variables setup (Edit CI_PROFILE)
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
          echo "CONDA_ENV_FILE=workflow/envs/environment.yaml" >> $GITHUB_ENV
          echo "CONDA_ENV_NAME=ncov-recombinant" >> $GITHUB_ENV
          echo "CI_PROFILE=profiles/controls" >> $GITHUB_ENV

      # checkout repository
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # setup conda with mamba
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge

      # install conda environment
      - name: create conda env
        run: mamba env create -f $CONDA_ENV_FILE

      # run help
      - name: run help
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE help;


      # END: COPIED FROM install.yaml
      #----------------------------------------------------------------------------#

      # run all
      - name: run all
        shell: bash -l {0}
        run: |
          conda activate $CONDA_ENV_NAME;
          snakemake --profile $CI_PROFILE;

      # Create an artifact of the powerpoint slides
      - name: upload report
        uses: actions/upload-artifact@v3
        with:
          name: report-controls
          path: results/controls/report/report.pptx
